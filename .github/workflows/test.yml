name: Test
on: [push, pull_request]
jobs:
  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.17.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{matrix.platform}}
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go ${{matrix.go-version}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go-version}}
        id: go

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.go-build }}
            ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test with Reporting (Linux only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          go test -race -covermode=atomic -coverprofile=cover.out ./...
          go test -race -covermode=atomic -coverprofile=cover.out -json ./... > report.json

      - name: Test without Reporting
        if: matrix.platform != 'ubuntu-latest'
        run: go test -race

      - name: SonarCloud Scan
        if: matrix.platform == 'ubuntu-latest'
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
